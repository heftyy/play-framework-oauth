#                     __  .__
#  _________   __ ___/  |_|  |__
# /  _ \__  \ |  |  \   __\  |  \
#(  <_> ) __ \|  |  /|  | |   Y  \
# \____(____  /____/ |__| |___|  /
#           \/                 \/

GET         /                             oauth.controllers.COAuthConsole.index()
GET         /js/routes                    oauth.controllers.COAuthConsole.javascriptRoutes()

GET         /ws/list                      oauth.controllers.COAuthWS.getList(json: String ?= null)
POST        /ws/update                    oauth.controllers.COAuthWS.update()
DELETE      /ws/delete/:id                oauth.controllers.COAuthWS.delete(id: Long)

GET         /client/key                   oauth.controllers.COAuthClient.downloadKey(uuid: String)
GET         /client/list                  oauth.controllers.COAuthClient.getList(json: String ?= null)
POST        /client/update                oauth.controllers.COAuthClient.update()
DELETE      /client/delete/:id            oauth.controllers.COAuthClient.delete(id: Long)

GET         /scope/:wsId                  oauth.controllers.COAuthScope.scopesForWS(wsId: Long)
GET         /scope/:wsId/:clientId        oauth.controllers.COAuthScope.scopesForWSAndClient(wsId: Long, clientId: Long)
GET         /scope/ws/get/:wsId           oauth.controllers.COAuthScope.downloadScopes(wsId: Long)
POST        /scope/update                 oauth.controllers.COAuthScope.update()

# Versioned Assets
GET         /vassets/*file                oauth.controllers.Assets.versioned(path="/public/lib/oauth-console", file: Asset)
# Unversioned Assets
GET         /assets/*file                 oauth.controllers.Assets.at(path="/public/lib/oauth-console", file)
# WebJars
GET         /webjars/*file                controllers.WebJarAssets.at(file)