# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
play.crypto.secret = "changeme"

# The application languages
# ~~~~~
play.i18n.langs = [ "en" ]

# Dependency Injection

play.modules.enabled += "be.objectify.deadbolt.java.DeadboltModule"
play.modules.enabled += "oauth.modules.OAuthBaseModule"
play.modules.enabled += "oauth.modules.OAuthServerModule"
play.modules.enabled += "oauth.modules.OAuthConsoleModule"
play.modules.enabled += "oauth.modules.OAuthWebServiceModule"

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# play.http.router = my.application.Routes

# Database configuration
db.default.driver=org.postgresql.Driver
db.default.url="postgres://postgres:qwerty@192.168.17.17:5432/oauth"

db.default.jndiName=DefaultDS
jpa.default=defaultPersistenceUnit

# Evolutions
# ~~~~~
# You can disable evolutions if needed
play.evolutions.enabled=false

# You can disable evolutions for a specific datasource if necessary
# play.evolutions.db.default.enabled=false

# OAuth
# ~~~~~

deadbolt {
  java {
    # cache-user is set to false, otherwise it's not possible to mix deadbolt handler that do and don't have users in the template examples
    cache-user=false
  }
}

oauth-client {
  request-token = "http://localhost:9000/oauth/server/token/request"
}

oauth-ws {
  validate-token = "http://localhost:9000/oauth/server/token/validate"
  domain = "http://127.0.0.1:9000"
  config = "scopes.xml"
}

oauth {
  address = "127.0.0.1"
  port = 9001
  tokenservice = "requestToken"
}
